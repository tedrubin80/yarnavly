# docker-compose.override.yml
# Development overrides for docker-compose.yml

version: '3.8'

services:
  # Development database with exposed port
  postgres:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: yarn_management
      POSTGRES_USER: yarn_user
      POSTGRES_PASSWORD: development_password
    volumes:
      - ./backend/scripts/yarn_management_schema.sql:/docker-entrypoint-initdb.d/02-schema.sql

  # Backend with hot reload
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://yarn_user:development_password@postgres:5432/yarn_management
      JWT_SECRET: development_jwt_secret_key
    command: npm run dev

  # Frontend with hot reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3001/api
    command: npm start
    stdin_open: true

  # Admin with hot reload
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile.dev
    volumes:
      - ./admin:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      REACT_APP_API_URL: http://localhost:3001/api
      PORT: 3002
    command: npm start

  # Development tools
  adminer:
    image: adminer
    ports:
      - "8081:8080"
    networks:
      - yarn_network
    depends_on:
      - postgres

  # Redis Commander for Redis GUI
  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    networks:
      - yarn_network
    depends_on:
      - redis

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025" # SMTP port
      - "8025:8025" # Web UI
    networks:
      - yarn_network